package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("IndexEntry")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class IndexEntry implements Marhallable {
	private long source;
	private long anchor;
	private long blockIndex;
	private java.time.OffsetDateTime blockTime;
	private long rootIndexIndex;

    //
	public long getSource() {
	    return source;
	}
	public void setSource(final long value) {
	    this.source = value;
	}

	public IndexEntry source(final long value) {
	    setSource(value);
	    return this;
	}
	public long getAnchor() {
	    return anchor;
	}
	public void setAnchor(final long value) {
	    this.anchor = value;
	}

	public IndexEntry anchor(final long value) {
	    setAnchor(value);
	    return this;
	}
	public long getBlockIndex() {
	    return blockIndex;
	}
	public void setBlockIndex(final long value) {
	    this.blockIndex = value;
	}

	public IndexEntry blockIndex(final long value) {
	    setBlockIndex(value);
	    return this;
	}
	public java.time.OffsetDateTime getBlockTime() {
	    return blockTime;
	}
	public void setBlockTime(final java.time.OffsetDateTime value) {
	    this.blockTime = value;
	}

	public IndexEntry blockTime(final java.time.OffsetDateTime value) {
	    setBlockTime(value);
	    return this;
	}
	public long getRootIndexIndex() {
	    return rootIndexIndex;
	}
	public void setRootIndexIndex(final long value) {
	    this.rootIndexIndex = value;
	}

	public IndexEntry rootIndexIndex(final long value) {
	    setRootIndexIndex(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.source == 0)) {
            marshaller.writeUint(1, this.source);
        }
        if (!(this.anchor == 0)) {
            marshaller.writeUint(2, this.anchor);
        }
        if (!(this.blockIndex == 0)) {
            marshaller.writeUint(3, this.blockIndex);
        }
        if (!(this.blockTime == null)) {
            marshaller.writeTime(4, this.blockTime);
        }
        if (!(this.rootIndexIndex == 0)) {
            marshaller.writeUint(5, this.rootIndexIndex);
        }
        return marshaller.array();
    }
}
