package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.Signature;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: SignatureType
// UnionValue: Partition

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("PartitionSignature")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class PartitionSignature implements Signature {
	public final SignatureType type = SignatureType.PARTITION;
	private Url sourceNetwork;
	private Url destinationNetwork;
	private long sequenceNumber;
	private byte[] transactionHash;

    //
	public Url getSourceNetwork() {
	    return sourceNetwork;
	}
	public void setSourceNetwork(final Url value) {
	    this.sourceNetwork = value;
	}

	public PartitionSignature sourceNetwork(final Url value) {
	    setSourceNetwork(value);
	    return this;
	}
	public PartitionSignature sourceNetwork(final String value) {
	    setSourceNetwork(Url.parse(value));
	    return this;
	}
	public Url getDestinationNetwork() {
	    return destinationNetwork;
	}
	public void setDestinationNetwork(final Url value) {
	    this.destinationNetwork = value;
	}

	public PartitionSignature destinationNetwork(final Url value) {
	    setDestinationNetwork(value);
	    return this;
	}
	public PartitionSignature destinationNetwork(final String value) {
	    setDestinationNetwork(Url.parse(value));
	    return this;
	}
	public long getSequenceNumber() {
	    return sequenceNumber;
	}
	public void setSequenceNumber(final long value) {
	    this.sequenceNumber = value;
	}

	public PartitionSignature sequenceNumber(final long value) {
	    setSequenceNumber(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getTransactionHash() {
	    return transactionHash;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setTransactionHash(final byte[] value) {
	    this.transactionHash = value;
	}

	public PartitionSignature transactionHash(final byte[] value) {
	    setTransactionHash(value);
	    return this;
	}
	public PartitionSignature transactionHash(final String value) {
		try {
			setTransactionHash(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        marshaller.writeValue(1, type);
        if (!(this.sourceNetwork == null)) {
            marshaller.writeUrl(2, this.sourceNetwork);
        }
        if (!(this.destinationNetwork == null)) {
            marshaller.writeUrl(3, this.destinationNetwork);
        }
        if (!(this.sequenceNumber == 0)) {
            marshaller.writeUint(4, this.sequenceNumber);
        }
        if (!(this.transactionHash == null || this.transactionHash.length == 0)) {
            marshaller.writeHash(5, this.transactionHash);
        }
        return marshaller.array();
    }
}
