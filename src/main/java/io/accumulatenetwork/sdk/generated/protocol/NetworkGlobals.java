package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("NetworkGlobals")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class NetworkGlobals implements Marhallable {
	private Rational operatorAcceptThreshold;
	private String majorBlockSchedule;
	private boolean anchorEmptyBlocks;

    //
	public Rational getOperatorAcceptThreshold() {
	    return operatorAcceptThreshold;
	}
	public void setOperatorAcceptThreshold(final Rational value) {
	    this.operatorAcceptThreshold = value;
	}

	public NetworkGlobals operatorAcceptThreshold(final Rational value) {
	    setOperatorAcceptThreshold(value);
	    return this;
	}
	public String getMajorBlockSchedule() {
	    return majorBlockSchedule;
	}
	public void setMajorBlockSchedule(final String value) {
	    this.majorBlockSchedule = value;
	}

	public NetworkGlobals majorBlockSchedule(final String value) {
	    setMajorBlockSchedule(value);
	    return this;
	}
	public boolean getAnchorEmptyBlocks() {
	    return anchorEmptyBlocks;
	}
	public void setAnchorEmptyBlocks(final boolean value) {
	    this.anchorEmptyBlocks = value;
	}

	public NetworkGlobals anchorEmptyBlocks(final boolean value) {
	    setAnchorEmptyBlocks(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.operatorAcceptThreshold == null)) {
            marshaller.writeValue(1, operatorAcceptThreshold);
        }
        if (!(this.majorBlockSchedule == null || this.majorBlockSchedule.length() == 0)) {
            marshaller.writeString(2, this.majorBlockSchedule);
        }
        if (!(!this.anchorEmptyBlocks)) {
            marshaller.writeBool(3, this.anchorEmptyBlocks);
        }
        return marshaller.array();
    }
}
