package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("TransactionHeader")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TransactionHeader implements Marhallable {
	private Url principal;
	private byte[] initiator;
	private String memo;
	private byte[] metadata;

    //
	public Url getPrincipal() {
	    return principal;
	}
	public void setPrincipal(final Url value) {
	    this.principal = value;
	}

	public TransactionHeader principal(final Url value) {
	    setPrincipal(value);
	    return this;
	}
	public TransactionHeader principal(final String value) {
	    setPrincipal(Url.parse(value));
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getInitiator() {
	    return initiator;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setInitiator(final byte[] value) {
	    this.initiator = value;
	}

	public TransactionHeader initiator(final byte[] value) {
	    setInitiator(value);
	    return this;
	}
	public TransactionHeader initiator(final String value) {
		try {
			setInitiator(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public String getMemo() {
	    return memo;
	}
	public void setMemo(final String value) {
	    this.memo = value;
	}

	public TransactionHeader memo(final String value) {
	    setMemo(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getMetadata() {
	    return metadata;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setMetadata(final byte[] value) {
	    this.metadata = value;
	}

	public TransactionHeader metadata(final byte[] value) {
	    setMetadata(value);
	    return this;
	}
	public TransactionHeader metadata(final String value) {
		try {
			setMetadata(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.principal == null)) {
            marshaller.writeUrl(1, this.principal);
        }
        if (!(this.initiator == null || this.initiator.length == 0)) {
            marshaller.writeHash(2, this.initiator);
        }
        if (!(this.memo == null || this.memo.length() == 0)) {
            marshaller.writeString(3, this.memo);
        }
        if (!(this.metadata == null || this.metadata.length == 0)) {
            marshaller.writeBytes(4, this.metadata);
        }
        return marshaller.array();
    }
}
