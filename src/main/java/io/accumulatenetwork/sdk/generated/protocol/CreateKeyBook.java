package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.TransactionBody;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: TransactionType
// UnionValue: CreateKeyBook

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("CreateKeyBook")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class CreateKeyBook implements TransactionBody {
	public final TransactionType type = TransactionType.CREATE_KEY_BOOK;
	private Url url;
	private byte[] publicKeyHash;
	private Url[] authorities;

    //
	public Url getUrl() {
	    return url;
	}
	public void setUrl(final Url value) {
	    this.url = value;
	}

	public CreateKeyBook url(final Url value) {
	    setUrl(value);
	    return this;
	}
	public CreateKeyBook url(final String value) {
	    setUrl(Url.parse(value));
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getPublicKeyHash() {
	    return publicKeyHash;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setPublicKeyHash(final byte[] value) {
	    this.publicKeyHash = value;
	}

	public CreateKeyBook publicKeyHash(final byte[] value) {
	    setPublicKeyHash(value);
	    return this;
	}
	public CreateKeyBook publicKeyHash(final String value) {
		try {
			setPublicKeyHash(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public Url[] getAuthorities() {
	    return authorities;
	}
	public void setAuthorities(final Url[] value) {
	    this.authorities = value;
	}

	public CreateKeyBook authorities(final Url[] value) {
	    setAuthorities(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        marshaller.writeValue(1, type);
        if (!(this.url == null)) {
            marshaller.writeUrl(2, this.url);
        }
        if (!(this.publicKeyHash == null || this.publicKeyHash.length == 0)) {
            marshaller.writeBytes(3, this.publicKeyHash);
        }
        if (!(this.authorities == null || this.authorities.length == 0)) {
            marshaller.writeUrl(5, this.authorities);
        }
        return marshaller.array();
    }
}
