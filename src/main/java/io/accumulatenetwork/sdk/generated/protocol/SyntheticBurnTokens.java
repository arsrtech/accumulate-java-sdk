package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.TransactionBody;
import io.accumulatenetwork.sdk.protocol.TxID;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.GoBigIntDeserializer;
import io.accumulatenetwork.sdk.support.serializers.GoBigIntSerializer;
// UnionType: TransactionType
// UnionValue: SyntheticBurnTokens

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("SyntheticBurnTokens")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class SyntheticBurnTokens implements TransactionBody {
	public final TransactionType type = TransactionType.SYNTHETIC_BURN_TOKENS;
	private TxID cause;
	private Url source;
	private Url initiator;
	private long feeRefund;
	private java.math.BigInteger amount;
	private boolean isRefund;

    //
	public TxID getCause() {
	    return cause;
	}
	public void setCause(final TxID value) {
	    this.cause = value;
	}

	public SyntheticBurnTokens cause(final TxID value) {
	    setCause(value);
	    return this;
	}
	public Url getSource() {
	    return source;
	}
	public void setSource(final Url value) {
	    this.source = value;
	}

	public SyntheticBurnTokens source(final Url value) {
	    setSource(value);
	    return this;
	}
	public SyntheticBurnTokens source(final String value) {
	    setSource(Url.parse(value));
	    return this;
	}
	public Url getInitiator() {
	    return initiator;
	}
	public void setInitiator(final Url value) {
	    this.initiator = value;
	}

	public SyntheticBurnTokens initiator(final Url value) {
	    setInitiator(value);
	    return this;
	}
	public SyntheticBurnTokens initiator(final String value) {
	    setInitiator(Url.parse(value));
	    return this;
	}
	public long getFeeRefund() {
	    return feeRefund;
	}
	public void setFeeRefund(final long value) {
	    this.feeRefund = value;
	}

	public SyntheticBurnTokens feeRefund(final long value) {
	    setFeeRefund(value);
	    return this;
	}
	@JsonDeserialize(using = GoBigIntDeserializer.class)
	public java.math.BigInteger getAmount() {
	    return amount;
	}
	@JsonSerialize(using = GoBigIntSerializer.class)
	public void setAmount(final java.math.BigInteger value) {
	    this.amount = value;
	}

	public SyntheticBurnTokens amount(final java.math.BigInteger value) {
	    setAmount(value);
	    return this;
	}
	public boolean getIsRefund() {
	    return isRefund;
	}
	public void setIsRefund(final boolean value) {
	    this.isRefund = value;
	}

	public SyntheticBurnTokens isRefund(final boolean value) {
	    setIsRefund(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        marshaller.writeValue(1, type);
        if (!(this.cause == null)) {
            marshaller.writeTxid(2, this.cause);
        }
        if (!(this.source == null)) {
            marshaller.writeUrl(3, this.source);
        }
        if (!(this.initiator == null)) {
            marshaller.writeUrl(4, this.initiator);
        }
        if (!(this.feeRefund == 0)) {
            marshaller.writeUint(5, this.feeRefund);
        }
        if (!((this.amount).equals(java.math.BigInteger.ZERO))) {
            marshaller.writeBigInt(6, this.amount);
        }
        if (!(!this.isRefund)) {
            marshaller.writeBool(7, this.isRefund);
        }
        return marshaller.array();
    }
}
