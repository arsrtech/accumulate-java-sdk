package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.accumulatenetwork.sdk.protocol.TransactionBody;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: TransactionType
// UnionValue: SyntheticForwardTransaction

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("SyntheticForwardTransaction")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class SyntheticForwardTransaction implements TransactionBody {
	public final TransactionType type = TransactionType.SYNTHETIC_FORWARD_TRANSACTION;
	private RemoteSignature[] signatures;
	private Transaction transaction;

    //
	public RemoteSignature[] getSignatures() {
	    return signatures;
	}
	public void setSignatures(final RemoteSignature[] value) {
	    this.signatures = value;
	}

	public SyntheticForwardTransaction signatures(final RemoteSignature[] value) {
	    setSignatures(value);
	    return this;
	}
	public Transaction getTransaction() {
	    return transaction;
	}
	public void setTransaction(final Transaction value) {
	    this.transaction = value;
	}

	public SyntheticForwardTransaction transaction(final Transaction value) {
	    setTransaction(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        marshaller.writeValue(1, type);
        if (!(this.signatures == null)) {
            marshaller.writeValue(2, signatures);
        }
        if (!(this.transaction == null)) {
            marshaller.writeValue(3, transaction);
        }
        return marshaller.array();
    }
}
