package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.accumulatenetwork.sdk.protocol.DataEntry;
import io.accumulatenetwork.sdk.protocol.TransactionBody;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: TransactionType
// UnionValue: WriteData

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("WriteData")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class WriteData implements TransactionBody {
	public final TransactionType type = TransactionType.WRITE_DATA;
	private DataEntry entry;
	private boolean scratch;
	private boolean writeToState;

    //
	public DataEntry getEntry() {
	    return entry;
	}
	public void setEntry(final DataEntry value) {
	    this.entry = value;
	}

	public WriteData entry(final DataEntry value) {
	    setEntry(value);
	    return this;
	}
	public boolean getScratch() {
	    return scratch;
	}
	public void setScratch(final boolean value) {
	    this.scratch = value;
	}

	public WriteData scratch(final boolean value) {
	    setScratch(value);
	    return this;
	}
	public boolean getWriteToState() {
	    return writeToState;
	}
	public void setWriteToState(final boolean value) {
	    this.writeToState = value;
	}

	public WriteData writeToState(final boolean value) {
	    setWriteToState(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        marshaller.writeValue(1, type);
        if (!(this.entry == null)) {
            marshaller.writeValue(2, entry);
        }
        if (!(!this.scratch)) {
            marshaller.writeBool(3, this.scratch);
        }
        if (!(!this.writeToState)) {
            marshaller.writeBool(4, this.writeToState);
        }
        return marshaller.array();
    }
}
