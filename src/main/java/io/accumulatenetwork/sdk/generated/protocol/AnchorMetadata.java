package io.accumulatenetwork.sdk.generated.protocol;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.generated.managed.ChainType;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("AnchorMetadata")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class AnchorMetadata implements Marhallable {
	private String name;
	private ChainType type;
	private Url account;
	private long index;
	private long sourceIndex;
	private long sourceBlock;
	private byte[] entry;

    //
	public String getName() {
	    return name;
	}
	public void setName(final String value) {
	    this.name = value;
	}

	public AnchorMetadata name(final String value) {
	    setName(value);
	    return this;
	}
	public ChainType getType() {
	    return type;
	}
	public void setType(final ChainType value) {
	    this.type = value;
	}

	public AnchorMetadata type(final ChainType value) {
	    setType(value);
	    return this;
	}
	public Url getAccount() {
	    return account;
	}
	public void setAccount(final Url value) {
	    this.account = value;
	}

	public AnchorMetadata account(final Url value) {
	    setAccount(value);
	    return this;
	}
	public AnchorMetadata account(final String value) {
	    setAccount(Url.parse(value));
	    return this;
	}
	public long getIndex() {
	    return index;
	}
	public void setIndex(final long value) {
	    this.index = value;
	}

	public AnchorMetadata index(final long value) {
	    setIndex(value);
	    return this;
	}
	public long getSourceIndex() {
	    return sourceIndex;
	}
	public void setSourceIndex(final long value) {
	    this.sourceIndex = value;
	}

	public AnchorMetadata sourceIndex(final long value) {
	    setSourceIndex(value);
	    return this;
	}
	public long getSourceBlock() {
	    return sourceBlock;
	}
	public void setSourceBlock(final long value) {
	    this.sourceBlock = value;
	}

	public AnchorMetadata sourceBlock(final long value) {
	    setSourceBlock(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getEntry() {
	    return entry;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setEntry(final byte[] value) {
	    this.entry = value;
	}

	public AnchorMetadata entry(final byte[] value) {
	    setEntry(value);
	    return this;
	}
	public AnchorMetadata entry(final String value) {
		try {
			setEntry(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.name == null || this.name.length() == 0)) {
            marshaller.writeString(1, this.name);
        }
        if (!(this.type == null)) {
            marshaller.writeValue(2, type);
        }
        if (!(this.account == null)) {
            marshaller.writeUrl(3, this.account);
        }
        if (!(this.index == 0)) {
            marshaller.writeUint(4, this.index);
        }
        if (!(this.sourceIndex == 0)) {
            marshaller.writeUint(5, this.sourceIndex);
        }
        if (!(this.sourceBlock == 0)) {
            marshaller.writeUint(6, this.sourceBlock);
        }
        if (!(this.entry == null || this.entry.length == 0)) {
            marshaller.writeBytes(7, this.entry);
        }
        return marshaller.array();
    }
}
