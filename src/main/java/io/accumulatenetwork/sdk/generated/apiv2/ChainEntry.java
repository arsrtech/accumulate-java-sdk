package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.Hex2DDeserializer;
import io.accumulatenetwork.sdk.support.serializers.Hex2DSerializer;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("ChainEntry")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ChainEntry implements Marhallable {
	private long height;
	private byte[] entry;
	private byte[][] state;
	private JsonNode value;

    //
	public long getHeight() {
	    return height;
	}
	public void setHeight(final long value) {
	    this.height = value;
	}

	public ChainEntry height(final long value) {
	    setHeight(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getEntry() {
	    return entry;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setEntry(final byte[] value) {
	    this.entry = value;
	}

	public ChainEntry entry(final byte[] value) {
	    setEntry(value);
	    return this;
	}
	public ChainEntry entry(final String value) {
		try {
			setEntry(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	@JsonDeserialize(using = Hex2DDeserializer.class)
	public byte[][] getState() {
	    return state;
	}
	@JsonSerialize(using = Hex2DSerializer.class)
	public void setState(final byte[][] value) {
	    this.state = value;
	}

	public ChainEntry state(final byte[][] value) {
	    setState(value);
	    return this;
	}
	public JsonNode getValue() {
	    return value;
	}
	public void setValue(final JsonNode value) {
	    this.value = value;
	}

	public ChainEntry value(final JsonNode value) {
	    setValue(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        marshaller.writeUint(1, this.height);
        if (!(this.entry == null || this.entry.length == 0)) {
            marshaller.writeBytes(2, this.entry);
        }
        if (!(this.state == null || this.state.length == 0)) {
            marshaller.writeBytes(3, this.state);
        }
        if (!(this.value == null)) {
            marshaller.writeAny(4, this.value);
        }
        return marshaller.array();
    }
}
