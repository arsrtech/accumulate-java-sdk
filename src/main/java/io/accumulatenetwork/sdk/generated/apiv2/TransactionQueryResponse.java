package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.generated.protocol.Transaction;
import io.accumulatenetwork.sdk.generated.protocol.TransactionStatus;
import io.accumulatenetwork.sdk.generated.query.TxReceipt;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.Signature;
import io.accumulatenetwork.sdk.protocol.TxID;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("TransactionQueryResponse")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TransactionQueryResponse implements Marhallable {
	private String type;
	private MerkleState mainChain;
	private JsonNode data;
	private Url origin;
	private byte[] transactionHash;
	private TxID txid;
	private Transaction transaction;
	private Signature[] signatures;
	private TransactionStatus status;
	private TxID[] produced;
	private TxReceipt[] receipts;
	private SignatureBook[] signatureBooks;

    //
	public String getType() {
	    return type;
	}
	public void setType(final String value) {
	    this.type = value;
	}

	public TransactionQueryResponse type(final String value) {
	    setType(value);
	    return this;
	}
	public MerkleState getMainChain() {
	    return mainChain;
	}
	public void setMainChain(final MerkleState value) {
	    this.mainChain = value;
	}

	public TransactionQueryResponse mainChain(final MerkleState value) {
	    setMainChain(value);
	    return this;
	}
	public JsonNode getData() {
	    return data;
	}
	public void setData(final JsonNode value) {
	    this.data = value;
	}

	public TransactionQueryResponse data(final JsonNode value) {
	    setData(value);
	    return this;
	}
	public Url getOrigin() {
	    return origin;
	}
	public void setOrigin(final Url value) {
	    this.origin = value;
	}

	public TransactionQueryResponse origin(final Url value) {
	    setOrigin(value);
	    return this;
	}
	public TransactionQueryResponse origin(final String value) {
	    setOrigin(Url.parse(value));
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getTransactionHash() {
	    return transactionHash;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setTransactionHash(final byte[] value) {
	    this.transactionHash = value;
	}

	public TransactionQueryResponse transactionHash(final byte[] value) {
	    setTransactionHash(value);
	    return this;
	}
	public TransactionQueryResponse transactionHash(final String value) {
		try {
			setTransactionHash(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public TxID getTxid() {
	    return txid;
	}
	public void setTxid(final TxID value) {
	    this.txid = value;
	}

	public TransactionQueryResponse txid(final TxID value) {
	    setTxid(value);
	    return this;
	}
	public Transaction getTransaction() {
	    return transaction;
	}
	public void setTransaction(final Transaction value) {
	    this.transaction = value;
	}

	public TransactionQueryResponse transaction(final Transaction value) {
	    setTransaction(value);
	    return this;
	}
	public Signature[] getSignatures() {
	    return signatures;
	}
	public void setSignatures(final Signature[] value) {
	    this.signatures = value;
	}

	public TransactionQueryResponse signatures(final Signature[] value) {
	    setSignatures(value);
	    return this;
	}
	public TransactionStatus getStatus() {
	    return status;
	}
	public void setStatus(final TransactionStatus value) {
	    this.status = value;
	}

	public TransactionQueryResponse status(final TransactionStatus value) {
	    setStatus(value);
	    return this;
	}
	public TxID[] getProduced() {
	    return produced;
	}
	public void setProduced(final TxID[] value) {
	    this.produced = value;
	}

	public TransactionQueryResponse produced(final TxID[] value) {
	    setProduced(value);
	    return this;
	}
	public TxReceipt[] getReceipts() {
	    return receipts;
	}
	public void setReceipts(final TxReceipt[] value) {
	    this.receipts = value;
	}

	public TransactionQueryResponse receipts(final TxReceipt[] value) {
	    setReceipts(value);
	    return this;
	}
	public SignatureBook[] getSignatureBooks() {
	    return signatureBooks;
	}
	public void setSignatureBooks(final SignatureBook[] value) {
	    this.signatureBooks = value;
	}

	public TransactionQueryResponse signatureBooks(final SignatureBook[] value) {
	    setSignatureBooks(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.type == null || this.type.length() == 0)) {
            marshaller.writeString(1, this.type);
        }
        if (!(this.mainChain == null)) {
            marshaller.writeValue(2, mainChain);
        }
        if (!(this.data == null)) {
            marshaller.writeAny(3, this.data);
        }
        if (!(this.origin == null)) {
            marshaller.writeUrl(4, this.origin);
        }
        if (!(this.transactionHash == null || this.transactionHash.length == 0)) {
            marshaller.writeBytes(5, this.transactionHash);
        }
        if (!(this.txid == null)) {
            marshaller.writeTxid(6, this.txid);
        }
        if (!(this.transaction == null)) {
            marshaller.writeValue(7, transaction);
        }
        if (!(this.signatures == null)) {
            marshaller.writeValue(8, signatures);
        }
        if (!(this.status == null)) {
            marshaller.writeValue(9, status);
        }
        if (!(this.produced == null || this.produced.length == 0)) {
            marshaller.writeTxid(10, this.produced);
        }
        if (!(this.receipts == null)) {
            marshaller.writeValue(11, receipts);
        }
        if (!(this.signatureBooks == null)) {
            marshaller.writeValue(12, signatureBooks);
        }
        return marshaller.array();
    }
}
