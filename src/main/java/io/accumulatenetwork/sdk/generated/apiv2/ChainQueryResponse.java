package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.generated.query.ChainState;
import io.accumulatenetwork.sdk.generated.query.GeneralReceipt;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("ChainQueryResponse")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ChainQueryResponse implements Marhallable {
	private String type;
	private MerkleState mainChain;
	private ChainState[] chains;
	private JsonNode data;
	private byte[] chainId;
	private GeneralReceipt receipt;

    //
	public String getType() {
	    return type;
	}
	public void setType(final String value) {
	    this.type = value;
	}

	public ChainQueryResponse type(final String value) {
	    setType(value);
	    return this;
	}
	public MerkleState getMainChain() {
	    return mainChain;
	}
	public void setMainChain(final MerkleState value) {
	    this.mainChain = value;
	}

	public ChainQueryResponse mainChain(final MerkleState value) {
	    setMainChain(value);
	    return this;
	}
	public ChainState[] getChains() {
	    return chains;
	}
	public void setChains(final ChainState[] value) {
	    this.chains = value;
	}

	public ChainQueryResponse chains(final ChainState[] value) {
	    setChains(value);
	    return this;
	}
	public JsonNode getData() {
	    return data;
	}
	public void setData(final JsonNode value) {
	    this.data = value;
	}

	public ChainQueryResponse data(final JsonNode value) {
	    setData(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getChainId() {
	    return chainId;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setChainId(final byte[] value) {
	    this.chainId = value;
	}

	public ChainQueryResponse chainId(final byte[] value) {
	    setChainId(value);
	    return this;
	}
	public ChainQueryResponse chainId(final String value) {
		try {
			setChainId(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public GeneralReceipt getReceipt() {
	    return receipt;
	}
	public void setReceipt(final GeneralReceipt value) {
	    this.receipt = value;
	}

	public ChainQueryResponse receipt(final GeneralReceipt value) {
	    setReceipt(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.type == null || this.type.length() == 0)) {
            marshaller.writeString(1, this.type);
        }
        if (!(this.mainChain == null)) {
            marshaller.writeValue(2, mainChain);
        }
        if (!(this.chains == null)) {
            marshaller.writeValue(3, chains);
        }
        if (!(this.data == null)) {
            marshaller.writeAny(4, this.data);
        }
        if (!(this.chainId == null || this.chainId.length == 0)) {
            marshaller.writeBytes(5, this.chainId);
        }
        if (!(this.receipt == null)) {
            marshaller.writeValue(6, receipt);
        }
        return marshaller.array();
    }
}
