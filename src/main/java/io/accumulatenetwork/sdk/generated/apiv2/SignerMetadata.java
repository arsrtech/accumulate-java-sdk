package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.accumulatenetwork.sdk.generated.protocol.AccountType;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("SignerMetadata")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class SignerMetadata implements Marhallable {
	private AccountType type;
	private Url url;
	private long acceptThreshold;

    //
	public AccountType getType() {
	    return type;
	}
	public void setType(final AccountType value) {
	    this.type = value;
	}

	public SignerMetadata type(final AccountType value) {
	    setType(value);
	    return this;
	}
	public Url getUrl() {
	    return url;
	}
	public void setUrl(final Url value) {
	    this.url = value;
	}

	public SignerMetadata url(final Url value) {
	    setUrl(value);
	    return this;
	}
	public SignerMetadata url(final String value) {
	    setUrl(Url.parse(value));
	    return this;
	}
	public long getAcceptThreshold() {
	    return acceptThreshold;
	}
	public void setAcceptThreshold(final long value) {
	    this.acceptThreshold = value;
	}

	public SignerMetadata acceptThreshold(final long value) {
	    setAcceptThreshold(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.type == null)) {
            marshaller.writeValue(1, type);
        }
        if (!(this.url == null)) {
            marshaller.writeUrl(2, this.url);
        }
        if (!(this.acceptThreshold == 0)) {
            marshaller.writeUint(3, this.acceptThreshold);
        }
        return marshaller.array();
    }
}
