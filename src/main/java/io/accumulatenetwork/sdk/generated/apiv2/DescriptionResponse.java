package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.generated.config.Network;
import io.accumulatenetwork.sdk.generated.config.NetworkType;
import io.accumulatenetwork.sdk.generated.core.GlobalValues;
import io.accumulatenetwork.sdk.generated.errors.Error;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("DescriptionResponse")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class DescriptionResponse implements Marhallable {
	private String partitionId;
	private NetworkType networkType;
	private Network network;
	private byte[] networkAnchor;
	private GlobalValues values;
	private Error error;

    //
	public String getPartitionId() {
	    return partitionId;
	}
	public void setPartitionId(final String value) {
	    this.partitionId = value;
	}

	public DescriptionResponse partitionId(final String value) {
	    setPartitionId(value);
	    return this;
	}
	public NetworkType getNetworkType() {
	    return networkType;
	}
	public void setNetworkType(final NetworkType value) {
	    this.networkType = value;
	}

	public DescriptionResponse networkType(final NetworkType value) {
	    setNetworkType(value);
	    return this;
	}
	public Network getNetwork() {
	    return network;
	}
	public void setNetwork(final Network value) {
	    this.network = value;
	}

	public DescriptionResponse network(final Network value) {
	    setNetwork(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getNetworkAnchor() {
	    return networkAnchor;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setNetworkAnchor(final byte[] value) {
	    this.networkAnchor = value;
	}

	public DescriptionResponse networkAnchor(final byte[] value) {
	    setNetworkAnchor(value);
	    return this;
	}
	public DescriptionResponse networkAnchor(final String value) {
		try {
			setNetworkAnchor(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public GlobalValues getValues() {
	    return values;
	}
	public void setValues(final GlobalValues value) {
	    this.values = value;
	}

	public DescriptionResponse values(final GlobalValues value) {
	    setValues(value);
	    return this;
	}
	public Error getError() {
	    return error;
	}
	public void setError(final Error value) {
	    this.error = value;
	}

	public DescriptionResponse error(final Error value) {
	    setError(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.partitionId == null || this.partitionId.length() == 0)) {
            marshaller.writeString(1, this.partitionId);
        }
        if (!(this.networkType == null)) {
            marshaller.writeValue(2, networkType);
        }
        if (!(this.network == null)) {
            marshaller.writeValue(3, network);
        }
        if (!(this.networkAnchor == null || this.networkAnchor.length == 0)) {
            marshaller.writeHash(4, this.networkAnchor);
        }
        if (!(this.values == null)) {
            marshaller.writeValue(5, values);
        }
        if (!(this.error == null)) {
            marshaller.writeValue(6, error);
        }
        return marshaller.array();
    }
}
