package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.TxID;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.Hex2DDeserializer;
import io.accumulatenetwork.sdk.support.serializers.Hex2DSerializer;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("TxResponse")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TxResponse implements Marhallable {
	private byte[] transactionHash;
	private TxID txid;
	private byte[][] signatureHashes;
	private byte[] simpleHash;
	private long code;
	private String message;
	private boolean delivered;
	private JsonNode result;

    //
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getTransactionHash() {
	    return transactionHash;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setTransactionHash(final byte[] value) {
	    this.transactionHash = value;
	}

	public TxResponse transactionHash(final byte[] value) {
	    setTransactionHash(value);
	    return this;
	}
	public TxResponse transactionHash(final String value) {
		try {
			setTransactionHash(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public TxID getTxid() {
	    return txid;
	}
	public void setTxid(final TxID value) {
	    this.txid = value;
	}

	public TxResponse txid(final TxID value) {
	    setTxid(value);
	    return this;
	}
	@JsonDeserialize(using = Hex2DDeserializer.class)
	public byte[][] getSignatureHashes() {
	    return signatureHashes;
	}
	@JsonSerialize(using = Hex2DSerializer.class)
	public void setSignatureHashes(final byte[][] value) {
	    this.signatureHashes = value;
	}

	public TxResponse signatureHashes(final byte[][] value) {
	    setSignatureHashes(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getSimpleHash() {
	    return simpleHash;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setSimpleHash(final byte[] value) {
	    this.simpleHash = value;
	}

	public TxResponse simpleHash(final byte[] value) {
	    setSimpleHash(value);
	    return this;
	}
	public TxResponse simpleHash(final String value) {
		try {
			setSimpleHash(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public long getCode() {
	    return code;
	}
	public void setCode(final long value) {
	    this.code = value;
	}

	public TxResponse code(final long value) {
	    setCode(value);
	    return this;
	}
	public String getMessage() {
	    return message;
	}
	public void setMessage(final String value) {
	    this.message = value;
	}

	public TxResponse message(final String value) {
	    setMessage(value);
	    return this;
	}
	public boolean getDelivered() {
	    return delivered;
	}
	public void setDelivered(final boolean value) {
	    this.delivered = value;
	}

	public TxResponse delivered(final boolean value) {
	    setDelivered(value);
	    return this;
	}
	public JsonNode getResult() {
	    return result;
	}
	public void setResult(final JsonNode value) {
	    this.result = value;
	}

	public TxResponse result(final JsonNode value) {
	    setResult(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.transactionHash == null || this.transactionHash.length == 0)) {
            marshaller.writeBytes(1, this.transactionHash);
        }
        if (!(this.txid == null)) {
            marshaller.writeTxid(2, this.txid);
        }
        if (!(this.signatureHashes == null || this.signatureHashes.length == 0)) {
            marshaller.writeBytes(3, this.signatureHashes);
        }
        if (!(this.simpleHash == null || this.simpleHash.length == 0)) {
            marshaller.writeBytes(4, this.simpleHash);
        }
        if (!(this.code == 0)) {
            marshaller.writeUint(5, this.code);
        }
        if (!(this.message == null || this.message.length() == 0)) {
            marshaller.writeString(6, this.message);
        }
        if (!(!this.delivered)) {
            marshaller.writeBool(7, this.delivered);
        }
        if (!(this.result == null)) {
            marshaller.writeAny(8, this.result);
        }
        return marshaller.array();
    }
}
