package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.HexDeserializer;
import io.accumulatenetwork.sdk.support.serializers.HexSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("TxRequest")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class TxRequest implements Marhallable {
	private boolean checkOnly;
	private boolean isEnvelope;
	private Url origin;
	private Signer signer;
	private byte[] signature;
	private KeyPage keyPage;
	private byte[] txHash;
	private JsonNode payload;
	private String memo;
	private byte[] metadata;

    //
	public boolean getCheckOnly() {
	    return checkOnly;
	}
	public void setCheckOnly(final boolean value) {
	    this.checkOnly = value;
	}

	public TxRequest checkOnly(final boolean value) {
	    setCheckOnly(value);
	    return this;
	}
	public boolean getIsEnvelope() {
	    return isEnvelope;
	}
	public void setIsEnvelope(final boolean value) {
	    this.isEnvelope = value;
	}

	public TxRequest isEnvelope(final boolean value) {
	    setIsEnvelope(value);
	    return this;
	}
	public Url getOrigin() {
	    return origin;
	}
	public void setOrigin(final Url value) {
	    this.origin = value;
	}

	public TxRequest origin(final Url value) {
	    setOrigin(value);
	    return this;
	}
	public TxRequest origin(final String value) {
	    setOrigin(Url.parse(value));
	    return this;
	}
	public Signer getSigner() {
	    return signer;
	}
	public void setSigner(final Signer value) {
	    this.signer = value;
	}

	public TxRequest signer(final Signer value) {
	    setSigner(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getSignature() {
	    return signature;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setSignature(final byte[] value) {
	    this.signature = value;
	}

	public TxRequest signature(final byte[] value) {
	    setSignature(value);
	    return this;
	}
	public TxRequest signature(final String value) {
		try {
			setSignature(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public KeyPage getKeyPage() {
	    return keyPage;
	}
	public void setKeyPage(final KeyPage value) {
	    this.keyPage = value;
	}

	public TxRequest keyPage(final KeyPage value) {
	    setKeyPage(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getTxHash() {
	    return txHash;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setTxHash(final byte[] value) {
	    this.txHash = value;
	}

	public TxRequest txHash(final byte[] value) {
	    setTxHash(value);
	    return this;
	}
	public TxRequest txHash(final String value) {
		try {
			setTxHash(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}
	public JsonNode getPayload() {
	    return payload;
	}
	public void setPayload(final JsonNode value) {
	    this.payload = value;
	}

	public TxRequest payload(final JsonNode value) {
	    setPayload(value);
	    return this;
	}
	public String getMemo() {
	    return memo;
	}
	public void setMemo(final String value) {
	    this.memo = value;
	}

	public TxRequest memo(final String value) {
	    setMemo(value);
	    return this;
	}
	@JsonDeserialize(using = HexDeserializer.class)
	public byte[] getMetadata() {
	    return metadata;
	}
	@JsonSerialize(using = HexSerializer.class)
	public void setMetadata(final byte[] value) {
	    this.metadata = value;
	}

	public TxRequest metadata(final byte[] value) {
	    setMetadata(value);
	    return this;
	}
	public TxRequest metadata(final String value) {
		try {
			setMetadata(io.accumulatenetwork.sdk.commons.codec.binary.Hex.decodeHex(value));
		} catch (io.accumulatenetwork.sdk.commons.codec.DecoderException e) {
			throw new RuntimeException(e);
		}
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(!this.checkOnly)) {
            marshaller.writeBool(1, this.checkOnly);
        }
        if (!(!this.isEnvelope)) {
            marshaller.writeBool(2, this.isEnvelope);
        }
        if (!(this.origin == null)) {
            marshaller.writeUrl(3, this.origin);
        }
        if (!(this.signer == null)) {
            marshaller.writeValue(4, signer);
        }
        if (!(this.signature == null || this.signature.length == 0)) {
            marshaller.writeBytes(5, this.signature);
        }
        if (!(this.keyPage == null)) {
            marshaller.writeValue(6, keyPage);
        }
        if (!(this.txHash == null || this.txHash.length == 0)) {
            marshaller.writeBytes(7, this.txHash);
        }
        if (!(this.payload == null)) {
            marshaller.writeAny(8, this.payload);
        }
        if (!(this.memo == null || this.memo.length() == 0)) {
            marshaller.writeString(9, this.memo);
        }
        if (!(this.metadata == null || this.metadata.length == 0)) {
            marshaller.writeBytes(10, this.metadata);
        }
        return marshaller.array();
    }
}
