package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.JsonNode;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("MultiResponse")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class MultiResponse implements Marhallable {
	private String type;
	private JsonNode[] items;
	private long start;
	private long count;
	private long total;
	private JsonNode[] otherItems;

    //
	public String getType() {
	    return type;
	}
	public void setType(final String value) {
	    this.type = value;
	}

	public MultiResponse type(final String value) {
	    setType(value);
	    return this;
	}
	public JsonNode[] getItems() {
	    return items;
	}
	public void setItems(final JsonNode[] value) {
	    this.items = value;
	}

	public MultiResponse items(final JsonNode[] value) {
	    setItems(value);
	    return this;
	}
	public long getStart() {
	    return start;
	}
	public void setStart(final long value) {
	    this.start = value;
	}

	public MultiResponse start(final long value) {
	    setStart(value);
	    return this;
	}
	public long getCount() {
	    return count;
	}
	public void setCount(final long value) {
	    this.count = value;
	}

	public MultiResponse count(final long value) {
	    setCount(value);
	    return this;
	}
	public long getTotal() {
	    return total;
	}
	public void setTotal(final long value) {
	    this.total = value;
	}

	public MultiResponse total(final long value) {
	    setTotal(value);
	    return this;
	}
	public JsonNode[] getOtherItems() {
	    return otherItems;
	}
	public void setOtherItems(final JsonNode[] value) {
	    this.otherItems = value;
	}

	public MultiResponse otherItems(final JsonNode[] value) {
	    setOtherItems(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.type == null || this.type.length() == 0)) {
            marshaller.writeString(1, this.type);
        }
        if (!(this.items == null || this.items.length == 0)) {
            marshaller.writeAny(2, this.items);
        }
        marshaller.writeUint(3, this.start);
        marshaller.writeUint(4, this.count);
        marshaller.writeUint(5, this.total);
        if (!(this.otherItems == null || this.otherItems.length == 0)) {
            marshaller.writeAny(6, this.otherItems);
        }
        return marshaller.array();
    }
}
