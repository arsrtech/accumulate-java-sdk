package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.protocol.Url;
import io.accumulatenetwork.sdk.support.Marshaller;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("DataEntrySetQuery")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class DataEntrySetQuery implements Marhallable {
	private Url url;
	private long start;
	private long count;
	private boolean expand;
	private long height;
	private boolean scratch;
	private boolean prove;

    //
	public Url getUrl() {
	    return url;
	}
	public void setUrl(final Url value) {
	    this.url = value;
	}

	public DataEntrySetQuery url(final Url value) {
	    setUrl(value);
	    return this;
	}
	public DataEntrySetQuery url(final String value) {
	    setUrl(Url.parse(value));
	    return this;
	}
	public long getStart() {
	    return start;
	}
	public void setStart(final long value) {
	    this.start = value;
	}

	public DataEntrySetQuery start(final long value) {
	    setStart(value);
	    return this;
	}
	public long getCount() {
	    return count;
	}
	public void setCount(final long value) {
	    this.count = value;
	}

	public DataEntrySetQuery count(final long value) {
	    setCount(value);
	    return this;
	}
	public boolean getExpand() {
	    return expand;
	}
	public void setExpand(final boolean value) {
	    this.expand = value;
	}

	public DataEntrySetQuery expand(final boolean value) {
	    setExpand(value);
	    return this;
	}
	public long getHeight() {
	    return height;
	}
	public void setHeight(final long value) {
	    this.height = value;
	}

	public DataEntrySetQuery height(final long value) {
	    setHeight(value);
	    return this;
	}
	public boolean getScratch() {
	    return scratch;
	}
	public void setScratch(final boolean value) {
	    this.scratch = value;
	}

	public DataEntrySetQuery scratch(final boolean value) {
	    setScratch(value);
	    return this;
	}
	public boolean getProve() {
	    return prove;
	}
	public void setProve(final boolean value) {
	    this.prove = value;
	}

	public DataEntrySetQuery prove(final boolean value) {
	    setProve(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.url == null)) {
            marshaller.writeUrl(1, this.url);
        }
        if (!(this.start == 0)) {
            marshaller.writeUint(2, this.start);
        }
        if (!(this.count == 0)) {
            marshaller.writeUint(3, this.count);
        }
        if (!(!this.expand)) {
            marshaller.writeBool(4, this.expand);
        }
        if (!(this.height == 0)) {
            marshaller.writeUint(5, this.height);
        }
        if (!(!this.scratch)) {
            marshaller.writeBool(6, this.scratch);
        }
        if (!(!this.prove)) {
            marshaller.writeBool(7, this.prove);
        }
        return marshaller.array();
    }
}
