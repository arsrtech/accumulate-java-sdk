package io.accumulatenetwork.sdk.generated.apiv2;

/**
    GENERATED BY go run ./tools/cmd/gen-api. DO NOT EDIT.
**/

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.accumulatenetwork.sdk.protocol.Marhallable;
import io.accumulatenetwork.sdk.support.Marshaller;
import io.accumulatenetwork.sdk.support.serializers.Hex2DDeserializer;
import io.accumulatenetwork.sdk.support.serializers.Hex2DSerializer;
// UnionType: 
// UnionValue: 

@JsonIgnoreProperties(ignoreUnknown = true)
@JsonTypeName("MerkleState")
@JsonInclude(JsonInclude.Include.NON_NULL)
public class MerkleState implements Marhallable {
	private long height;
	private byte[][] roots;

    //
	public long getHeight() {
	    return height;
	}
	public void setHeight(final long value) {
	    this.height = value;
	}

	public MerkleState height(final long value) {
	    setHeight(value);
	    return this;
	}
	@JsonDeserialize(using = Hex2DDeserializer.class)
	public byte[][] getRoots() {
	    return roots;
	}
	@JsonSerialize(using = Hex2DSerializer.class)
	public void setRoots(final byte[][] value) {
	    this.roots = value;
	}

	public MerkleState roots(final byte[][] value) {
	    setRoots(value);
	    return this;
	}

    public byte[] marshalBinary() {
        final var marshaller = new Marshaller();
        if (!(this.height == 0)) {
            marshaller.writeUint(1, this.height);
        }
        if (!(this.roots == null || this.roots.length == 0)) {
            marshaller.writeBytes(2, this.roots);
        }
        return marshaller.array();
    }
}
